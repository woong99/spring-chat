spring:
  profiles:
    active: local
    include:
      - security
      - domain-rdb
      - domain-mongo
      - domain-redis
  application:
    name: module-websocket
management:
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    instance-id: ${deploy}:${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
server:
  tomcat:
    mbeanregistry:
      enabled: true
    max-connections: 11000
---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    bootstrap-servers: ENC(+GIxEXQ2SNELyZ8trlJo0vBIBj3m/FxDidWJ5/a7BFfNi9g6w3BrGQ==)
    consumer:
      group-id: 9999
logging:
  config: classpath:log4j2-local.xml
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---
spring:
  config:
    activate:
      on-profile: dev
  kafka:
    bootstrap-servers: ENC(+GIxEXQ2SNELyZ8trlJo0vBIBj3m/FxDidWJ5/a7BFfNi9g6w3BrGQ==)
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID}
logging:
  config: classpath:log4j2-dev.xml
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
load-balancer-url: ENC(RCmFpVB7zYUSEmo3xOjm3X2K30t/xv0ZTHGIkszKldknOlFi/b+o/ZE2fkwxb+uP)

---
spring:
  config:
    activate:
      on-profile: prod
  kafka:
    bootstrap-servers: ENC(8XJzYCkULV3ogLbiVfG0kuTzL3XqUENXRK5+yD1N0rs=)
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID}
logging:
  config: classpath:log4j2-prod.xml
eureka:
  client:
    service-url:
      defaultZone: ENC(mgnBclbQwQR4Qg+RQl93V0NZcoQpNJtvHTcZPQHcnOHaiINaW16TmRqc5LeAVrdo)
load-balancer-url: ENC(RCmFpVB7zYUSEmo3xOjm3X2K30t/xv0ZTHGIkszKldknOlFi/b+o/ZE2fkwxb+uP)